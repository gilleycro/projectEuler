/*

Using names.txt (right click and 'Save Link/Target As...'), a 46K text file containing over five-thousand first names, begin by sorting it into alphabetical order. Then working out the alphabetical value for each name, multiply this value by its alphabetical position in the list to obtain a name score.

For example, when the list is sorted into alphabetical order, COLIN, which is worth 3 + 15 + 12 + 9 + 14 = 53, is the 938th name in the list. So, COLIN would obtain a score of 938 Ã— 53 = 49714.

What is the total of all the name scores in the file?


*/

import java.io.*;
import java.util.Scanner;
import java.lang.StringBuilder;
import java.util.ArrayList;
import java.util.Arrays;
/*
 *
 * @author gilley
 */
public class PE22 {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws IOException {
        // TODO code application logic here
 try{
     
     long sumValueOfNames =0;
    
          File file = new File("p022_names.txt");
         
          Scanner input = new Scanner(file);
          
          StringBuilder string = new StringBuilder();
          
          
          //importing all names from text files to String builder
          while(input.hasNext()){
              
              string.append(input.next());
          }
          
         //importing names from String builder to array of Strings
         //names are separated by ","
     String [] names = string.toString().split(",");
 
        //sorting array
        Arrays.sort(names);
 
       
 
        //number A value is 65, number Z value is 90
     for(int i=0;i<names.length;i++){   
    int valueOfName= nameValue(names[i]);
    int valueOfNameAndPlace = valueOfName * (i+1);
    sumValueOfNames +=(long)valueOfNameAndPlace;
     }
 
 System.out.println(sumValueOfNames);
 } 
 
 
 
 catch(Exception ex){
     
     
 }
     
    }
    
    
    //function that gives every name it's int value
    public static int nameValue(String name){
        int nameValue =0;
        
        char [] charArray = name.toCharArray();
        
        
        for(int i=0;i<charArray.length;i++){
            
            if(charArray[i]>='A' && charArray[i]<='Z'){
                nameValue+=((int)(charArray[i])-64);
           
            }
        }
            
        
        
        return nameValue;
    }
    
}



